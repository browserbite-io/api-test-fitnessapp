/*
//------------------------------------------------------------------------------ 
// This code was generated by Amplication. 
// 
// Changes to this file will be lost if the code is regenerated. 
//
// There are other ways to to customize your code, see this doc to learn more
// https://docs.amplication.com/docs/how-to/custom-code
//
//------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, IsString, IsOptional, ValidateNested } from "class-validator";
import { Type } from "class-transformer";
import { Notification } from "../../notification/base/Notification";
import { NutritionPlan } from "../../nutritionPlan/base/NutritionPlan";
import { User } from "../../user/base/User";
import { WorkoutPlan } from "../../workoutPlan/base/WorkoutPlan";
@ObjectType()
class Goal {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Notification],
  })
  @ValidateNested()
  @Type(() => Notification)
  @IsOptional()
  notifications?: Array<Notification>;

  @ApiProperty({
    required: false,
    type: () => [NutritionPlan],
  })
  @ValidateNested()
  @Type(() => NutritionPlan)
  @IsOptional()
  nutritionPlans?: Array<NutritionPlan>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [User],
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  users?: Array<User>;

  @ApiProperty({
    required: false,
    type: () => [WorkoutPlan],
  })
  @ValidateNested()
  @Type(() => WorkoutPlan)
  @IsOptional()
  workoutPlans?: Array<WorkoutPlan>;
}
export { Goal };
