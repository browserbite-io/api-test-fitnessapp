/*
//------------------------------------------------------------------------------ 
// This code was generated by Amplication. 
// 
// Changes to this file will be lost if the code is regenerated. 
//
// There are other ways to to customize your code, see this doc to learn more
// https://docs.amplication.com/docs/how-to/custom-code
//
//------------------------------------------------------------------------------
  */
import { PrismaService } from "nestjs-prisma";
import { Prisma, Tip, NutritionPlan, WorkoutPlan } from "@prisma/client";

export class TipServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.TipFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.TipFindManyArgs>
  ): Promise<number> {
    return this.prisma.tip.count(args);
  }

  async findMany<T extends Prisma.TipFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.TipFindManyArgs>
  ): Promise<Tip[]> {
    return this.prisma.tip.findMany(args);
  }
  async findOne<T extends Prisma.TipFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.TipFindUniqueArgs>
  ): Promise<Tip | null> {
    return this.prisma.tip.findUnique(args);
  }
  async create<T extends Prisma.TipCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TipCreateArgs>
  ): Promise<Tip> {
    return this.prisma.tip.create<T>(args);
  }
  async update<T extends Prisma.TipUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.TipUpdateArgs>
  ): Promise<Tip> {
    return this.prisma.tip.update<T>(args);
  }
  async delete<T extends Prisma.TipDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.TipDeleteArgs>
  ): Promise<Tip> {
    return this.prisma.tip.delete(args);
  }

  async getNutritionPlan(parentId: string): Promise<NutritionPlan | null> {
    return this.prisma.tip
      .findUnique({
        where: { id: parentId },
      })
      .nutritionPlan();
  }

  async getWorkoutPlan(parentId: string): Promise<WorkoutPlan | null> {
    return this.prisma.tip
      .findUnique({
        where: { id: parentId },
      })
      .workoutPlan();
  }
}
